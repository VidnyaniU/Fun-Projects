/* Set the box model for all elements to include padding and border in width/height */

* box-sizing border-box

/* Define variables in the root scope for global access */
:root {
    --on: 0;
    /* Controls the "on" state of the toggle scene (0 for off, 1 for on) */
    --bg: 'hsl(%s, %s, %s)' % (calc(200 - (var(--on) * 160)) calc((20 + (var(--on) * 50)) * 1%) calc((20 + (var(--on) * 60)) * 1%));
    --cord: 'hsl(0, 0%, %s)' % (calc((60 - (var(--on) * 50)) * 1%));
    --stroke: 'hsl(0, 0%, %s)' % (calc((60 - (var(--on) * 50)) * 1%));
    --shine: 'hsla(0, 0%, 100%, %s)' % calc(0.75 - (var(--on) * 0.5));
    --cap: 'hsl(0, 0%, %s)' % calc((40 + (var(--on) * 30)) * 1%);
    --filament: 'hsl(45, %s, %s)' % (calc(var(--on) * 80%) calc((25 + (var(--on) * 75)) * 1%));
}

/* Style the body element */
body {
    min-height: 100vh;
    /* Set minimum height to 100% viewport height */
    display: flex;
    /* Arrange child elements in a flexbox layout */
    align-items: center;
    /* Align vertically in center of container */
    justify-content: center;
    /* Align horizontally in center of container */
    background: var(--bg);
    /* Use the `--bg` variable for background color */
}

/* Style the `.toggle-scene` element */
.toggle-scene {
    /* Override potential overflow issues within CodePen */
    overflow: visible !important;
    height: 50vmin;
    /* Set height to 50% viewport height */
    position: absolute;
    /* Position the element absolutely relative to its nearest positioned ancestor */
}

/* Style the `.toggle-scene__cord` elements (electrical cords) */
.toggle-scene__cord {
    stroke: var(--cord);
    /* Set the stroke color using the `--cord` variable */
    cursor: move;
    /* Set cursor to "move" on hover for potential dragging */
}

/* Hide the first cord element (controlled by JavaScript) */
.toggle-scene__cord:nth-of-type(1) {
    display: none;
}

/* Hide cords by default (except the first one) */
.toggle-scene__cord:nth-of-type(2),
.toggle-scene__cord:nth-of-type(3),
.toggle-scene__cord:nth-of-type(4),
.toggle-scene__cord:nth-of-type(5) {
    display: none;
}

/* Style the ends of the cords */
.toggle-scene__cord-end {
    stroke: var(--cord);
    /* Set the stroke color */
    fill: var(--cord);
    /* Set the fill color (likely for arrowheads) */
}

/* Style the dummy cord (potentially hidden or decorative) */
.toggle-scene__dummy-cord {
    stroke-width: 6;
    /* Set the stroke width */
    stroke: var(--cord);
    /* Set the stroke color */
}

/* Style different parts of the light bulb graphic */
.bulb {
    &__filament {
        stroke: var(--filament);
        /* Set the stroke color for the filament */
    }

    &__shine {
        stroke: var(--shine);
        /* Set the stroke color for the light shine effect */
    }

    &__flash {
        /* Add logic to show/hide this element as needed (currently hidden) */
        stroke: hsl(45, 80%, 80%);
    }

    &__bulb {
        stroke: var(--stroke);
        /* Set the stroke color for the bulb outline */
        fill: hsla(calc(180 - (95 * var(--on))), 80%, 80%, calc(0.1 + (0.4 * var(--on))));
        /* Calculate fill color based on `--on` */
    }

    &__cap {
        fill: var(--cap);
        /* Set the fill color for the bulb cap */
    }

    &__cap-shine {
        fill: var(--shine);
        /* Set the fill color for the light shine effect on the cap */
    }

    &__cap-outline {
        stroke: var(--stroke);
        /* Set the stroke color for the bulb cap outline */
    }
}